{"version":3,"sources":["scripts/mn-textarea.component.js"],"names":["mnTextarea","setInputAttribute","attribute","isDefaultAttribute","hasOwnProperty","attributeValue","element","getAttribute","name","isValidValue","values","indexOf","value","default","textarea","setAttribute","this","textareaAttributes","document","createElement","classList","add","map","appendChild","placeholder","label","textContent","prototype","Object","create","HTMLElement","createdCallback","registerElement"],"mappings":"AAAA,YAMA,SAASA,cAuDP,QAASC,mBAAkBC,WACzB,GAAIC,oBAAqBD,UAAUE,eAAe,WAC9CC,eAAiBC,QAAQC,aAAaL,UAAUM,KAEpD,IAAIL,mBAAoB,CACtB,GAAIM,cAAeP,UAAUE,eAAe,WACvCF,UAAUQ,OAAOC,QAAQN,iBAAmB,EAE7CO,MAAQH,aACRJ,eACAH,UAAUW,OAEdC,UAASC,aAAab,UAAUM,KAAMI,WAC7BP,iBACTS,SAASC,aAAab,UAAUM,KAAMH,gBApE1C,GAAIC,SAAUU,KAEVC,qBAEAT,KAAM,cACNK,QAAS,cAOTL,KAAM,UAGNA,KAAM,SAGNA,KAAM,cAGNA,KAAM,cAGNA,KAAM,YAGNA,KAAM,aAGNA,KAAM,aAGNA,KAAM,aAKNM,SAAWI,SAASC,cAAc,MACtCL,UAASM,UAAUC,IAAI,WACvBP,SAASC,aAAa,kBAAmB,QACzCE,mBAAmBK,IAAIrB,mBACvBK,QAAQiB,YAAYT,SAGpB,IAAIU,aAAclB,QAAQC,aAAa,cACvC,IAAIiB,YAAa,CACf,GAAIC,OAAQP,SAASC,cAAc,QACnCM,OAAMC,YAAcpB,QAAQC,aAAa,YAClCiB,YADa,YAEhBA,YACJlB,QAAQiB,YAAYE,QAxDxB,GAAIE,WAAYC,OAAOC,OAAOC,YAAYH,UAC1CA,WAAUI,gBAAkB/B,WAC5BkB,SAASc,gBAAgB,eAAgBL,UAAAA","file":"mn-textarea.js","sourcesContent":["'use strict';\n\nlet prototype = Object.create(HTMLElement.prototype);\nprototype.createdCallback = mnTextarea;\ndocument.registerElement('mn-textarea', {prototype});\n\nfunction mnTextarea() {\n  let element = this;\n\n  let textareaAttributes = [\n    {\n      name: 'placeholder',\n      default: 'undefined',\n    },\n    // {\n    //   name: 'rows',\n    //   default: '1',\n    // },\n    {\n      name: 'value',\n    },\n    {\n      name: 'name',\n    },\n    {\n      name: 'autofocus',\n    },\n    {\n      name: 'maxlength',\n    },\n    {\n      name: 'pattern',\n    },\n    {\n      name: 'readonly',\n    },\n    {\n      name: 'required',\n    },\n    {\n      name: 'disabled',\n    },\n  ];\n\n  // textarea element\n  let textarea = document.createElement('div');\n  textarea.classList.add('content');\n  textarea.setAttribute('contenteditable', 'true');\n  textareaAttributes.map(setInputAttribute);\n  element.appendChild(textarea);\n\n  // label element\n  let placeholder = element.getAttribute('placeholder');\n  if (placeholder) {\n    let label = document.createElement('label');\n    label.textContent = element.getAttribute('disabled')\n      ? `${placeholder} disabled`\n      : placeholder;\n    element.appendChild(label);\n  }\n\n  function setInputAttribute(attribute) {\n    let isDefaultAttribute = attribute.hasOwnProperty('default');\n    let attributeValue = element.getAttribute(attribute.name);\n\n    if (isDefaultAttribute) {\n      let isValidValue = attribute.hasOwnProperty('values')\n        && attribute.values.indexOf(attributeValue) >= 0;\n\n      let value = isValidValue\n        ? attributeValue\n        : attribute.default;\n\n      textarea.setAttribute(attribute.name, value);\n    } else if (attributeValue) {\n      textarea.setAttribute(attribute.name, attributeValue);\n    }\n  }\n}\n"],"sourceRoot":"/source/"}